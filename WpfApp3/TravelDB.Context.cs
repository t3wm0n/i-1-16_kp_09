//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TravelAgencyEntities : DbContext
    {
        public TravelAgencyEntities()
            : base("name=TravelAgencyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Air_Ticket> Air_Ticket { get; set; }
        public virtual DbSet<Airport> Airport { get; set; }
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Deleted_Reports> Deleted_Reports { get; set; }
        public virtual DbSet<Financial_Report> Financial_Report { get; set; }
        public virtual DbSet<Hotel> Hotel { get; set; }
        public virtual DbSet<Order> Order { get; set; }
        public virtual DbSet<Payment_Method> Payment_Method { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Trip> Trip { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Voucher> Voucher { get; set; }
        public virtual DbSet<FullReport> FullReport { get; set; }
        public virtual DbSet<DecryptClient> DecryptClient { get; set; }
        public virtual DbSet<DecryptUser> DecryptUser { get; set; }
        public virtual DbSet<FullOrder> FullOrder { get; set; }
    
        public virtual int Add_Airport(string airport)
        {
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Airport", airportParameter);
        }
    
        public virtual int Add_City(string city, Nullable<int> country)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_City", cityParameter, countryParameter);
        }
    
        public virtual int Add_Client(string name, string surName, string midName, string gender, string passport_Ser, string passport_Num, Nullable<System.DateTime> date_Passport, string intPassport_Ser, string intPassport_Num, string phone_Number)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surNameParameter = surName != null ?
                new ObjectParameter("SurName", surName) :
                new ObjectParameter("SurName", typeof(string));
    
            var midNameParameter = midName != null ?
                new ObjectParameter("MidName", midName) :
                new ObjectParameter("MidName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var passport_SerParameter = passport_Ser != null ?
                new ObjectParameter("Passport_Ser", passport_Ser) :
                new ObjectParameter("Passport_Ser", typeof(string));
    
            var passport_NumParameter = passport_Num != null ?
                new ObjectParameter("Passport_Num", passport_Num) :
                new ObjectParameter("Passport_Num", typeof(string));
    
            var date_PassportParameter = date_Passport.HasValue ?
                new ObjectParameter("Date_Passport", date_Passport) :
                new ObjectParameter("Date_Passport", typeof(System.DateTime));
    
            var intPassport_SerParameter = intPassport_Ser != null ?
                new ObjectParameter("IntPassport_Ser", intPassport_Ser) :
                new ObjectParameter("IntPassport_Ser", typeof(string));
    
            var intPassport_NumParameter = intPassport_Num != null ?
                new ObjectParameter("IntPassport_Num", intPassport_Num) :
                new ObjectParameter("IntPassport_Num", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Client", nameParameter, surNameParameter, midNameParameter, genderParameter, passport_SerParameter, passport_NumParameter, date_PassportParameter, intPassport_SerParameter, intPassport_NumParameter, phone_NumberParameter);
        }
    
        public virtual int Add_Company(string company, string license)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var licenseParameter = license != null ?
                new ObjectParameter("License", license) :
                new ObjectParameter("License", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Company", companyParameter, licenseParameter);
        }
    
        public virtual int Add_Country(string country)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Country", countryParameter);
        }
    
        public virtual int Add_Hotel(string hotel_Name, Nullable<int> raiting, Nullable<int> cost, string address, Nullable<int> city)
        {
            var hotel_NameParameter = hotel_Name != null ?
                new ObjectParameter("Hotel_Name", hotel_Name) :
                new ObjectParameter("Hotel_Name", typeof(string));
    
            var raitingParameter = raiting.HasValue ?
                new ObjectParameter("Raiting", raiting) :
                new ObjectParameter("Raiting", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Hotel", hotel_NameParameter, raitingParameter, costParameter, addressParameter, cityParameter);
        }
    
        public virtual int Add_Order(string promocode, Nullable<int> order_Cost, Nullable<int> trip, Nullable<int> payment)
        {
            var promocodeParameter = promocode != null ?
                new ObjectParameter("Promocode", promocode) :
                new ObjectParameter("Promocode", typeof(string));
    
            var order_CostParameter = order_Cost.HasValue ?
                new ObjectParameter("Order_Cost", order_Cost) :
                new ObjectParameter("Order_Cost", typeof(int));
    
            var tripParameter = trip.HasValue ?
                new ObjectParameter("Trip", trip) :
                new ObjectParameter("Trip", typeof(int));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Order", promocodeParameter, order_CostParameter, tripParameter, paymentParameter);
        }
    
        public virtual int Add_Payment(string payment)
        {
            var paymentParameter = payment != null ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Payment", paymentParameter);
        }
    
        public virtual int Add_Report(Nullable<int> order, Nullable<System.DateTime> report_Date, Nullable<int> costs, Nullable<int> profit)
        {
            var orderParameter = order.HasValue ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(int));
    
            var report_DateParameter = report_Date.HasValue ?
                new ObjectParameter("Report_Date", report_Date) :
                new ObjectParameter("Report_Date", typeof(System.DateTime));
    
            var costsParameter = costs.HasValue ?
                new ObjectParameter("Costs", costs) :
                new ObjectParameter("Costs", typeof(int));
    
            var profitParameter = profit.HasValue ?
                new ObjectParameter("Profit", profit) :
                new ObjectParameter("Profit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Report", orderParameter, report_DateParameter, costsParameter, profitParameter);
        }
    
        public virtual int Add_Role(string role_Name, Nullable<int> add_Source, Nullable<int> add_Data, Nullable<int> delete_Data, Nullable<int> update_Data, Nullable<int> create_Report)
        {
            var role_NameParameter = role_Name != null ?
                new ObjectParameter("Role_Name", role_Name) :
                new ObjectParameter("Role_Name", typeof(string));
    
            var add_SourceParameter = add_Source.HasValue ?
                new ObjectParameter("Add_Source", add_Source) :
                new ObjectParameter("Add_Source", typeof(int));
    
            var add_DataParameter = add_Data.HasValue ?
                new ObjectParameter("Add_Data", add_Data) :
                new ObjectParameter("Add_Data", typeof(int));
    
            var delete_DataParameter = delete_Data.HasValue ?
                new ObjectParameter("Delete_Data", delete_Data) :
                new ObjectParameter("Delete_Data", typeof(int));
    
            var update_DataParameter = update_Data.HasValue ?
                new ObjectParameter("Update_Data", update_Data) :
                new ObjectParameter("Update_Data", typeof(int));
    
            var create_ReportParameter = create_Report.HasValue ?
                new ObjectParameter("Create_Report", create_Report) :
                new ObjectParameter("Create_Report", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Role", role_NameParameter, add_SourceParameter, add_DataParameter, delete_DataParameter, update_DataParameter, create_ReportParameter);
        }
    
        public virtual int Add_Ticket(Nullable<int> cost, Nullable<System.DateTime> date, Nullable<int> client, Nullable<int> airport)
        {
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(int));
    
            var airportParameter = airport.HasValue ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Ticket", costParameter, dateParameter, clientParameter, airportParameter);
        }
    
        public virtual int Add_Trip(Nullable<int> num_Trip, string name_Trip, Nullable<int> client, Nullable<int> voucher, Nullable<int> air_Ticket)
        {
            var num_TripParameter = num_Trip.HasValue ?
                new ObjectParameter("Num_Trip", num_Trip) :
                new ObjectParameter("Num_Trip", typeof(int));
    
            var name_TripParameter = name_Trip != null ?
                new ObjectParameter("Name_Trip", name_Trip) :
                new ObjectParameter("Name_Trip", typeof(string));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(int));
    
            var voucherParameter = voucher.HasValue ?
                new ObjectParameter("Voucher", voucher) :
                new ObjectParameter("Voucher", typeof(int));
    
            var air_TicketParameter = air_Ticket.HasValue ?
                new ObjectParameter("Air_Ticket", air_Ticket) :
                new ObjectParameter("Air_Ticket", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Trip", num_TripParameter, name_TripParameter, clientParameter, voucherParameter, air_TicketParameter);
        }
    
        public virtual int Add_User(string email, string userPassword, string userName, string userSurName, string userMidName, Nullable<int> role)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userSurNameParameter = userSurName != null ?
                new ObjectParameter("UserSurName", userSurName) :
                new ObjectParameter("UserSurName", typeof(string));
    
            var userMidNameParameter = userMidName != null ?
                new ObjectParameter("UserMidName", userMidName) :
                new ObjectParameter("UserMidName", typeof(string));
    
            var roleParameter = role.HasValue ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_User", emailParameter, userPasswordParameter, userNameParameter, userSurNameParameter, userMidNameParameter, roleParameter);
        }
    
        public virtual int Add_Voucher(string voucher_Num, Nullable<int> hotel, Nullable<int> company)
        {
            var voucher_NumParameter = voucher_Num != null ?
                new ObjectParameter("Voucher_Num", voucher_Num) :
                new ObjectParameter("Voucher_Num", typeof(string));
    
            var hotelParameter = hotel.HasValue ?
                new ObjectParameter("Hotel", hotel) :
                new ObjectParameter("Hotel", typeof(int));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Voucher", voucher_NumParameter, hotelParameter, companyParameter);
        }
    
        public virtual int Delete_Airport(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Airport", iDParameter);
        }
    
        public virtual int Delete_City(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_City", iDParameter);
        }
    
        public virtual int Delete_Client(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Client", iDParameter);
        }
    
        public virtual int Delete_Company(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Company", iDParameter);
        }
    
        public virtual int Delete_Country(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Country", iDParameter);
        }
    
        public virtual int Delete_Hotel(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Hotel", iDParameter);
        }
    
        public virtual int Delete_Order(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Order", iDParameter);
        }
    
        public virtual int Delete_Payment(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Payment", iDParameter);
        }
    
        public virtual int Delete_Report(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Report", iDParameter);
        }
    
        public virtual int Delete_Role(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Role", iDParameter);
        }
    
        public virtual int Delete_Ticket(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Ticket", iDParameter);
        }
    
        public virtual int Delete_Trip(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Trip", iDParameter);
        }
    
        public virtual int Delete_User(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_User", iDParameter);
        }
    
        public virtual int Delete_Voucher(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Voucher", iDParameter);
        }
    
        public virtual int Update_Airport(Nullable<int> iD, string airport)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var airportParameter = airport != null ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Airport", iDParameter, airportParameter);
        }
    
        public virtual int Update_City(Nullable<int> iD, string city, Nullable<int> country)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_City", iDParameter, cityParameter, countryParameter);
        }
    
        public virtual int Update_Client(Nullable<int> iD, string name, string surName, string midName, string gender, string passport_Ser, string passport_Num, Nullable<System.DateTime> date_Passport, string intPassport_Ser, string intPassport_Num, string phone_Number)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surNameParameter = surName != null ?
                new ObjectParameter("SurName", surName) :
                new ObjectParameter("SurName", typeof(string));
    
            var midNameParameter = midName != null ?
                new ObjectParameter("MidName", midName) :
                new ObjectParameter("MidName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var passport_SerParameter = passport_Ser != null ?
                new ObjectParameter("Passport_Ser", passport_Ser) :
                new ObjectParameter("Passport_Ser", typeof(string));
    
            var passport_NumParameter = passport_Num != null ?
                new ObjectParameter("Passport_Num", passport_Num) :
                new ObjectParameter("Passport_Num", typeof(string));
    
            var date_PassportParameter = date_Passport.HasValue ?
                new ObjectParameter("Date_Passport", date_Passport) :
                new ObjectParameter("Date_Passport", typeof(System.DateTime));
    
            var intPassport_SerParameter = intPassport_Ser != null ?
                new ObjectParameter("IntPassport_Ser", intPassport_Ser) :
                new ObjectParameter("IntPassport_Ser", typeof(string));
    
            var intPassport_NumParameter = intPassport_Num != null ?
                new ObjectParameter("IntPassport_Num", intPassport_Num) :
                new ObjectParameter("IntPassport_Num", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Client", iDParameter, nameParameter, surNameParameter, midNameParameter, genderParameter, passport_SerParameter, passport_NumParameter, date_PassportParameter, intPassport_SerParameter, intPassport_NumParameter, phone_NumberParameter);
        }
    
        public virtual int Update_Company(Nullable<int> iD, string company_Name, string license)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var company_NameParameter = company_Name != null ?
                new ObjectParameter("Company_Name", company_Name) :
                new ObjectParameter("Company_Name", typeof(string));
    
            var licenseParameter = license != null ?
                new ObjectParameter("License", license) :
                new ObjectParameter("License", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Company", iDParameter, company_NameParameter, licenseParameter);
        }
    
        public virtual int Update_Country(Nullable<int> iD, string country)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Country", iDParameter, countryParameter);
        }
    
        public virtual int Update_Hotel(Nullable<int> iD, string hotel_Name, Nullable<int> raiting, Nullable<int> cost, string address, Nullable<int> city)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var hotel_NameParameter = hotel_Name != null ?
                new ObjectParameter("Hotel_Name", hotel_Name) :
                new ObjectParameter("Hotel_Name", typeof(string));
    
            var raitingParameter = raiting.HasValue ?
                new ObjectParameter("Raiting", raiting) :
                new ObjectParameter("Raiting", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Hotel", iDParameter, hotel_NameParameter, raitingParameter, costParameter, addressParameter, cityParameter);
        }
    
        public virtual int Update_Order(Nullable<int> iD, string promocode, Nullable<int> order_Cost, Nullable<int> trip, Nullable<int> payment)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var promocodeParameter = promocode != null ?
                new ObjectParameter("Promocode", promocode) :
                new ObjectParameter("Promocode", typeof(string));
    
            var order_CostParameter = order_Cost.HasValue ?
                new ObjectParameter("Order_Cost", order_Cost) :
                new ObjectParameter("Order_Cost", typeof(int));
    
            var tripParameter = trip.HasValue ?
                new ObjectParameter("Trip", trip) :
                new ObjectParameter("Trip", typeof(int));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Order", iDParameter, promocodeParameter, order_CostParameter, tripParameter, paymentParameter);
        }
    
        public virtual int Update_Payment(Nullable<int> iD, string payment_Method)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var payment_MethodParameter = payment_Method != null ?
                new ObjectParameter("Payment_Method", payment_Method) :
                new ObjectParameter("Payment_Method", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Payment", iDParameter, payment_MethodParameter);
        }
    
        public virtual int Update_Report(Nullable<int> iD, Nullable<int> order_ID, Nullable<System.DateTime> report_Date, Nullable<int> costs, Nullable<int> profit)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var order_IDParameter = order_ID.HasValue ?
                new ObjectParameter("Order_ID", order_ID) :
                new ObjectParameter("Order_ID", typeof(int));
    
            var report_DateParameter = report_Date.HasValue ?
                new ObjectParameter("Report_Date", report_Date) :
                new ObjectParameter("Report_Date", typeof(System.DateTime));
    
            var costsParameter = costs.HasValue ?
                new ObjectParameter("Costs", costs) :
                new ObjectParameter("Costs", typeof(int));
    
            var profitParameter = profit.HasValue ?
                new ObjectParameter("Profit", profit) :
                new ObjectParameter("Profit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Report", iDParameter, order_IDParameter, report_DateParameter, costsParameter, profitParameter);
        }
    
        public virtual int Update_Role(Nullable<int> iD, string role_Name, Nullable<int> add_Source, Nullable<int> add_Data, Nullable<int> delete_Data, Nullable<int> update_Data, Nullable<int> create_Report)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var role_NameParameter = role_Name != null ?
                new ObjectParameter("Role_Name", role_Name) :
                new ObjectParameter("Role_Name", typeof(string));
    
            var add_SourceParameter = add_Source.HasValue ?
                new ObjectParameter("Add_Source", add_Source) :
                new ObjectParameter("Add_Source", typeof(int));
    
            var add_DataParameter = add_Data.HasValue ?
                new ObjectParameter("Add_Data", add_Data) :
                new ObjectParameter("Add_Data", typeof(int));
    
            var delete_DataParameter = delete_Data.HasValue ?
                new ObjectParameter("Delete_Data", delete_Data) :
                new ObjectParameter("Delete_Data", typeof(int));
    
            var update_DataParameter = update_Data.HasValue ?
                new ObjectParameter("Update_Data", update_Data) :
                new ObjectParameter("Update_Data", typeof(int));
    
            var create_ReportParameter = create_Report.HasValue ?
                new ObjectParameter("Create_Report", create_Report) :
                new ObjectParameter("Create_Report", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Role", iDParameter, role_NameParameter, add_SourceParameter, add_DataParameter, delete_DataParameter, update_DataParameter, create_ReportParameter);
        }
    
        public virtual int Update_Ticket(Nullable<int> iD, Nullable<int> cost, Nullable<System.DateTime> date, Nullable<int> client, Nullable<int> airport)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var clientParameter = client.HasValue ?
                new ObjectParameter("Client", client) :
                new ObjectParameter("Client", typeof(int));
    
            var airportParameter = airport.HasValue ?
                new ObjectParameter("Airport", airport) :
                new ObjectParameter("Airport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Ticket", iDParameter, costParameter, dateParameter, clientParameter, airportParameter);
        }
    
        public virtual int Update_Trip(Nullable<int> iD, Nullable<int> num_Trip, string name_Trip, Nullable<int> client_ID, Nullable<int> voucher_ID, Nullable<int> air_Ticket_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var num_TripParameter = num_Trip.HasValue ?
                new ObjectParameter("Num_Trip", num_Trip) :
                new ObjectParameter("Num_Trip", typeof(int));
    
            var name_TripParameter = name_Trip != null ?
                new ObjectParameter("Name_Trip", name_Trip) :
                new ObjectParameter("Name_Trip", typeof(string));
    
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("Client_ID", client_ID) :
                new ObjectParameter("Client_ID", typeof(int));
    
            var voucher_IDParameter = voucher_ID.HasValue ?
                new ObjectParameter("Voucher_ID", voucher_ID) :
                new ObjectParameter("Voucher_ID", typeof(int));
    
            var air_Ticket_IDParameter = air_Ticket_ID.HasValue ?
                new ObjectParameter("Air_Ticket_ID", air_Ticket_ID) :
                new ObjectParameter("Air_Ticket_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Trip", iDParameter, num_TripParameter, name_TripParameter, client_IDParameter, voucher_IDParameter, air_Ticket_IDParameter);
        }
    
        public virtual int Update_User(Nullable<int> iD, string email, string userPassword, string userName, string userSurName, string userMidName, Nullable<int> role_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userSurNameParameter = userSurName != null ?
                new ObjectParameter("UserSurName", userSurName) :
                new ObjectParameter("UserSurName", typeof(string));
    
            var userMidNameParameter = userMidName != null ?
                new ObjectParameter("UserMidName", userMidName) :
                new ObjectParameter("UserMidName", typeof(string));
    
            var role_IDParameter = role_ID.HasValue ?
                new ObjectParameter("Role_ID", role_ID) :
                new ObjectParameter("Role_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_User", iDParameter, emailParameter, userPasswordParameter, userNameParameter, userSurNameParameter, userMidNameParameter, role_IDParameter);
        }
    
        public virtual int Update_Voucher(Nullable<int> iD, string voucher_Num, Nullable<int> hotel_ID, Nullable<int> company_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var voucher_NumParameter = voucher_Num != null ?
                new ObjectParameter("Voucher_Num", voucher_Num) :
                new ObjectParameter("Voucher_Num", typeof(string));
    
            var hotel_IDParameter = hotel_ID.HasValue ?
                new ObjectParameter("Hotel_ID", hotel_ID) :
                new ObjectParameter("Hotel_ID", typeof(int));
    
            var company_IDParameter = company_ID.HasValue ?
                new ObjectParameter("Company_ID", company_ID) :
                new ObjectParameter("Company_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Voucher", iDParameter, voucher_NumParameter, hotel_IDParameter, company_IDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
